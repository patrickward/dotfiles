#!/usr/bin/env bash
#
# The Run Control Script
#
# Control, information, and reminders about all
# of the scripts used to control my life

. "$DOTFILES/lib/utils.sh"

show_zsh_commands() {
    echo ""
    okay "Available zsh commands (to be run within zsh):"
    echo ""
    echo "    ld-zcompdump: rebuild the zcomp database after new completions have been added"
    echo "    zsh_refresh: refresh all of the zsh functions in the current environment"
}

usage () {
    printf "\nUsage:\n\nrun <command>\n\nCommands:\n\n" && \
        grep -P " [^\\\]+\)\ #" "$0" | sed -r -E 's/\) #\s*/: \t\t/' ; exit 0;
}

cheatsheet () {
    sheet="$1"
    if [[ -z "$sheet" ]]
    then
        warn "Which cheatsheet? "
        ask "[t]mux, [z]sh: "
        sheet="$REPLY"
    fi
    case $sheet in
        t)
            show-tmux-cheatsheet;;
        z)
            show_zsh_commands;;
        *)
            echo ""
            fail "Invalid cheatsheet option"
            echo ""
    esac
}

case "$1" in
  backup) # Run the backup-veracrypt script
    backup
    ;;
  report) # Run a git commit report for sending to clients
    client-commit-report
    ;;
  flushdns) # Flush the dns
    "$DOTFILES"/bin/flush-dns
    ;;
  mount) # Mount a veracrypt volume (requires the volume to mount (personal|2FA)
    veracrypt-mount
    ;;
  ssl|certs) # Run the ssl cert checker
    ssl-cert-check -f "$SSL_CERT_CHECKER_DOMAINS"
    ;;
  cheat) # Show a cheatsheet
    cheatsheet $2
    ;;
  help|*) # Show this help screen
    usage
    ;;
esac

