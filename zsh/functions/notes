#!/bin/sh
#
# Simple script to automatically create or
# open plaintext notes in a particular
# directory.
# Usage: notes c - to cd to the notes directory
#        notes l - to list all notes in the direct
#        notes <filename>[.md] to create or open a file in vim.
#
# If no extension is provided, .md will be automatically added

# ENVIRONMENT VARS
#
# Override $NOTES_DIR in $HOME/.localrc
#

notes () {

  RED='\033[0;31m'
  GREEN='\033[0;32m'
  NC='\033[0m'

  cmd=nvim

  _notes_error() {
    echo "${RED}$1${NC}"
    if [ $# -eq 1 ]; then
      _notes_help
    fi
    return 0
  }

  _notes_help() {
    echo "\nNotes - Opens notes in the configured notes directory\n"
    echo "Commands:\n"
    echo "notes cd - Change to the notes directory"
    echo "notes ls [search] - List all notes in the notes directory. Add an optional search pattern."
    echo "notes push <message> - Commits and pushes any changes to the git repo. Message is required for the commit."
    echo "notes pull - Pulls any upstream changes into the local repo."
    echo "notes sync <message> - Commit, push, and pull all changes."
    echo "notes <filename>[.md] - Open the file for editing. If no extension is on the filename, .md is appended to the file name.\n"
    echo "Use tab-completion for files"
  }

  # Look for an overriden env var
  [ -z "$NOTES_DIR" ] && $NOTES_DIR="$HOME/notes"

  # Ensure the env var has been exported
  if ! env | grep -q '^NOTES_DIR='
  then
    export VARIABLE
  fi

  case "$1" in
    cd)
      cd "$NOTES_DIR"
      ;;
    ls)
      echo "${GREEN}Notes found:${NC}"
      if [ $# -eq 2 ]; then
        ls -l -1 "$NOTES_DIR" | grep -i "$2"
      else
        ls -l -1 "$NOTES_DIR"
      fi
      ;;
    push)
      if [ ! $# -eq 2 ]; then
        _notes_error "Please add a commit message."
      else
        cd "$NOTES_DIR"
        git add -A
        git commit -m "$1"
        git push
        cd -
      fi
      ;;
    pull)
      cd "$NOTES_DIR"
      # If there are uncommitted changes, stop and let me know
      if ! git diff-index --quiet HEAD --; then
        _notes_error "There are uncommited changes you should review before pulling." 0
        git status
      else
        git pull
        cd -
      fi
      ;;
    help|-h|--help)
      _notes_help
      ;;
    *)
      if [ $# -eq 0 ]; then
        _notes_error "Please enter a file to open."
      else
        pushd "$NOTES_DIR"
        case "$1" in
          *.*)
            $cmd "$1"
            ;;
          *)
            $cmd "$1".md
            ;;
        esac
      fi
  esac

}

